worker_processes  1;

events {
    worker_connections  1024;
}

# RTMP Server Configuration
rtmp {
    server {
        listen 1935; # RTMP default port
        chunk_size 4096;

        application stream {
            live on;
            record off;

            # Allow Internal FFmpeg
            allow publish 127.0.0.1;
            allow play 127.0.0.1;

            # Setting HLS 
            hls on;
            hls_path /usr/local/nginx/html/stream/hls;
            hls_fragment 3; # 3s segment
            hls_playlist_length 60;
            hls_nested on;

            # Multibitrate Stream Conversion using FFmpeg
            exec_push ffmpeg -re -i rtmp://localhost/stream/$name -async 1 -vsync -1 -map 0:v:0 -map 0:a:0 -map 0:v:0 -map 0:a:0 -map 0:v:0 -map 0:a:0 -map 0:v:0 -map 0:a:0 -c:v libx264 -c:a aac -b:a 128k -preset fast -g 48 -sc_threshold 0 -b:v:0 1920k -s:v:0 1280x720 -profile:v:0 high -b:v:1 1024k -s:v:1 960x540 -profile:v:1 main -b:v:2 768k -s:v:2 854x480 -profile:v:2 baseline -b:v:3 256k -s:v:3 640x360 -profile:v:3 baseline -f hls -hls_time 3 -hls_list_size 0 -hls_flags program_date_time -hls_flags independent_segments -hls_flags keep_segments -hls_flags append_list -hls_playlist_type event -hls_segment_filename "/usr/local/nginx/html/stream/hls/stream-%v-%03d.ts" -var_stream_map "v:0,a:0 v:1,a:1 v:2,a:2 v:3,a:3" -master_pl_name "master.m3u8" -master_pl_publish_rate 10 /usr/local/nginx/html/stream/hls/index_%v.m3u8;
            # Block Direct RTMP Playback
            deny play all;
        }
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    server {
        listen 80;
        server_name ; # Server IP Address
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name ; # Server IP Address

        ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

        # HLS Streaming (CORS Allowed)
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /usr/local/nginx/html/stream;
            add_header Cache-Control no-cache;
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires 0;
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
    }
}